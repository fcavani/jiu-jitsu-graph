{
  jiu_from_begin(func: eq(name@en, "start")) @recurse(depth: 10, loop: true) {
    name@pt
    to
    points
  }
}

{
  kimura(func: eq(name@pt, "Masahiko Kimura")) {
    uid
    name@pt
  }
}

{
  jiu(func: anyofterms(name@pt, "Jiu")) {
    uid
    name@pt
  }
}

{
  var(func: eq(name@en, "start")) @recurse(depth: 10, loop: true) {
    to
    p as points
  }
  j() {
    sum(val(p))
  }
}

{
  a as var(func: eq(name@pt, "in√≠cio")) {
    uid
  }
  b as var(func: eq(name@pt, "finalizado")) {
    uid
  }
  path as shortest(from: uid(a), to: uid(b)) {
    to
  }
  path(func: uid(path)) {
    name@pt
  }
}